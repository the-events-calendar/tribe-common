name: 'Codeception Tests'
on: [ pull_request ]
jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      run_tests: ${{ steps.php_check.outputs.php_files_changed }}
    steps:
      # ------------------------------------------------------------------------------
      # Checkout the repo
      # ------------------------------------------------------------------------------
      - name: Checkout the repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1000
          token: ${{ secrets.GH_BOT_TOKEN }}
          submodules: recursive
      # ------------------------------------------------------------------------------
      # Check if any PHP files have changed
      # ------------------------------------------------------------------------------
      - name: Check for PHP file changes
        id: php_check
        uses: ./.github/actions/check-php-changes
      # ------------------------------------------------------------------------------
  test:
    needs: check
    if: needs.check.outputs.run_tests
    strategy:
      matrix:
        suite:
          - activation
          - dependency
          - integration
          - muwpunit
          - snapshots
          - unit
          - wpunit
          - classy_integration
          - rest_tec_v1_integration
    runs-on: ubuntu-latest
    steps:
      # ------------------------------------------------------------------------------
      # Checkout the repo
      # ------------------------------------------------------------------------------
      - name: Checkout the repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          token: ${{ secrets.GH_BOT_TOKEN }}
          submodules: recursive
      # ------------------------------------------------------------------------------
      # Checkout slic
      # ------------------------------------------------------------------------------
      - name: Checkout slic
        uses: actions/checkout@v4
        with:
          repository: stellarwp/slic
          ref: main
          path: slic
          fetch-depth: 1
      # ------------------------------------------------------------------------------
      # Prepare our composer cache directory
      # ------------------------------------------------------------------------------
      - name: Get Composer Cache Directory
        id: get-composer-cache-dir
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v4
        id: composer-cache
        with:
          path: ${{ steps.get-composer-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      # ------------------------------------------------------------------------------
      # Initialize slic
      # ------------------------------------------------------------------------------
      - name: Move slic directory up
        run: |
          mv slic ./../slic
      - name: Set up slic env vars
        run: |
          echo "SLIC_COMPOSER_VERSION=2" >> $GITHUB_ENV
          echo "SLIC_BIN=${GITHUB_WORKSPACE}/../slic/slic" >> $GITHUB_ENV
          echo "SLIC_WP_DIR=${GITHUB_WORKSPACE}/../slic/_wordpress" >> $GITHUB_ENV
      - name: Set run context for slic
        run: echo "SLIC=1" >> $GITHUB_ENV && echo "CI=1" >> $GITHUB_ENV
      - name: Start ssh-agent
        run: |
          mkdir -p "${HOME}/.ssh";
          ssh-agent -a /tmp/ssh_agent.sock;
      - name: Export SSH_AUTH_SOCK env var
        run: echo "SSH_AUTH_SOCK=/tmp/ssh_agent.sock" >> $GITHUB_ENV
      - name: Set up slic for CI
        run: |
          cd ${GITHUB_WORKSPACE}/..
          ${SLIC_BIN} here
          ${SLIC_BIN} interactive off
          ${SLIC_BIN} build-prompt off
          ${SLIC_BIN} build-subdir off
          ${SLIC_BIN} xdebug off
          ${SLIC_BIN} composer-cache set /home/runner/.cache/composer
          ${SLIC_BIN} debug on
          ${SLIC_BIN} info
          ${SLIC_BIN} config
      # ------------------------------------------------------------------------------
      # Clone TEC using smart checkout
      # ------------------------------------------------------------------------------
      - name: Clone TEC
        uses: ./.github/actions/smart-checkout
        with:
          other_repo: the-events-calendar/the-events-calendar
          path: the-events-calendar
          token: ${{ secrets.GH_BOT_TOKEN }}
      - name: Init TEC
        run: |
          mv ${GITHUB_WORKSPACE}/the-events-calendar ${GITHUB_WORKSPACE}/../the-events-calendar
          docker network prune -f
          ${SLIC_BIN} use the-events-calendar
          ${SLIC_BIN} composer install --no-dev
      # ------------------------------------------------------------------------------
      # Set up Common
      # ------------------------------------------------------------------------------
      - name: Move Common inside TEC
        run: |
          rm -rf ${GITHUB_WORKSPACE}/../the-events-calendar/common
          cp -r ${GITHUB_WORKSPACE} ${GITHUB_WORKSPACE}/../the-events-calendar/common
      # ------------------------------------------------------------------------------
      # Set up Common and run tests
      # ------------------------------------------------------------------------------
      - name: Set up Common
        run: |
          ${SLIC_BIN} use the-events-calendar/common
          ${SLIC_BIN} composer install
      # ------------------------------------------------------------------------------
      # Update WordPress version to our min required.
      # ------------------------------------------------------------------------------
      - name: Init the WordPress container and set up a theme
        run: |
          ${SLIC_BIN} up wordpress
          ${SLIC_BIN} wp core version
          ${SLIC_BIN} wp core update --force --version=6.7
          ${SLIC_BIN} wp core version
          ${SLIC_BIN} wp core update-db
          ${SLIC_BIN} wp theme install twentytwenty --activate

      - name: Run suite tests
        run: ${SLIC_BIN} run ${{ matrix.suite }}
      # ------------------------------------------------------------------------------
      # Node.js setup for REST API integration tests
      # ------------------------------------------------------------------------------
      - name: Check for .nvmrc file
        if: matrix.suite == 'rest_tec_v1_integration'
        id: check-nvmrc
        run: |
          if [[ -f ".nvmrc" ]]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - uses: actions/setup-node@v4
        if: matrix.suite == 'rest_tec_v1_integration' && steps.check-nvmrc.outputs.exists == 'true'
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
          cache-dependency-path: package-lock.json
      - name: Install node modules
        if: matrix.suite == 'rest_tec_v1_integration'
        run: npm ci

      - name: Run OpenAPI Linter
        if: matrix.suite == 'rest_tec_v1_integration'
        run: |
          ${SLIC_BIN} wp plugin activate the-events-calendar
          ${SLIC_BIN} wp rewrite structure '/%postname%/' --hard
          npm run spectral -- http://localhost:8888/wp-json/tec/v1/docs/
